{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucia\\\\Desktop\\\\PPIV_integrador_final\\\\pp4\\\\agendar-paciente-fe\\\\agendar-app\\\\src\\\\PanelMedico.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./css/PanelMedico.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PanelMedico = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [turnos, setTurnos] = useState([]);\n  const [historiasClinicas, setHistoriasClinicas] = useState({});\n  const MEDICO_ID = user.id;\n  const MEDICO_NOMBRE = user.nombre;\n  const headerIconUrl = process.env.REACT_APP_ICONO_URL || \"\";\n  const headerTitle = process.env.REACT_APP_TITULO || \"Turnos Médicos\";\n  useEffect(() => {\n    const obtenerDatos = async () => {\n      try {\n        const resTurnos = await fetch(`${process.env.REACT_APP_API_TURNOS_OCUPADOS_HOY}/${MEDICO_ID}`);\n        if (!resTurnos.ok) throw new Error(\"Error al obtener turnos\");\n        const turnosData = await resTurnos.json();\n        setTurnos(turnosData);\n      } catch (error) {\n        console.error(\"Error al cargar datos:\", error);\n      }\n    };\n    obtenerDatos();\n  }, [MEDICO_ID]);\n  const cambiarEstado = async (turnoId, nuevoEstadoId) => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_MODIFICAR_ESTADO_TURNO}/${turnoId}/estado`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          estado_id: nuevoEstadoId\n        })\n      });\n      if (!res.ok) throw new Error(\"No se pudo actualizar el estado\");\n      setTurnos(prev => prev.map(t => t.turno_id === turnoId ? {\n        ...t,\n        estado_id: nuevoEstadoId,\n        estado: nuevoEstadoId === \"A\" ? \"Atendido\" : \"Ausente\"\n      } : t));\n    } catch (err) {\n      console.error(\"Error al cambiar estado:\", err.message);\n    }\n  };\n  const verHistoriaClinica = async (id_externo_paciente, turnoId) => {\n    if (historiasClinicas.hasOwnProperty(turnoId)) {\n      setHistoriasClinicas(prev => {\n        const nuevo = {\n          ...prev\n        };\n        delete nuevo[turnoId];\n        return nuevo;\n      });\n      return;\n    }\n    try {\n      const res = await fetch(process.env.REACT_APP_API_HISTORIAS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id_externo: id_externo_paciente\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.error);\n      setHistoriasClinicas(prev => ({\n        ...prev,\n        [turnoId]: data.historia\n      }));\n    } catch (error) {\n      setHistoriasClinicas(prev => ({\n        ...prev,\n        [turnoId]: null\n      }));\n      console.error(\"Error al obtener historia clínica:\", error.message);\n    }\n  };\n  if (!turnos) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando turnos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"10px 20px\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        gap: \"10px\"\n      },\n      children: [headerIconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: headerIconUrl,\n        alt: \"Icono\",\n        style: {\n          height: 40,\n          width: 110,\n          objectFit: \"contain\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: \"1.5rem\"\n        },\n        children: headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        style: {\n          width: 200,\n          borderRight: \"1px solid #ddd\",\n          padding: \"20px\",\n          backgroundColor: \"#f8f9fa\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          style: {\n            padding: \"10px\",\n            cursor: \"pointer\",\n            backgroundColor: \"transparent\",\n            color: \"black\",\n            border: \"none\",\n            borderRadius: 4,\n            textAlign: \"left\",\n            marginTop: \"auto\"\n          },\n          children: \"Salir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          flexGrow: 1,\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pantalla\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Turnos del D\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lista-turnos\",\n            children: turnos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No hay turnos para hoy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this) : turnos.map(turno => {\n              const ahora = new Date();\n              const inicio = new Date(turno.fecha);\n              const fin = new Date(inicio.getTime() + turno.duracion * 60000);\n              const enCurso = ahora >= inicio && ahora <= fin;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `turno-item ${enCurso ? \"turno-actual\" : \"\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: turno.paciente_nombre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this), \" \\u2014 \", turno.hora, \" \", \"\\u2014 Estado:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `estado ${turno.estado.toLowerCase()}`,\n                    children: turno.estado\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"botones-turno\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"boton-atendido\",\n                    onClick: () => cambiarEstado(turno.turno_id, \"A\"),\n                    disabled: turno.estado_id !== \"R\",\n                    children: \"Atendido\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"boton-ausente\",\n                    onClick: () => cambiarEstado(turno.turno_id, \"U\"),\n                    disabled: turno.estado_id !== \"R\",\n                    children: \"Ausente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"boton-historia\",\n                    onClick: () => verHistoriaClinica(turno.id_externo_paciente, turno.turno_id),\n                    children: \"Historia Cl\\xEDnica\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this), historiasClinicas.hasOwnProperty(turno.turno_id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"historia-clinica\",\n                  children: historiasClinicas[turno.turno_id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Historia Cl\\xEDnica:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: historiasClinicas[turno.turno_id]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"El paciente no posee historia cl\\xEDnica.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this)]\n              }, turno.turno_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(PanelMedico, \"igiKC5SQJN1KXnORXuhAtORcdOk=\");\n_c = PanelMedico;\nexport default PanelMedico;\nvar _c;\n$RefreshReg$(_c, \"PanelMedico\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PanelMedico","user","onLogout","_s","turnos","setTurnos","historiasClinicas","setHistoriasClinicas","MEDICO_ID","id","MEDICO_NOMBRE","nombre","headerIconUrl","process","env","REACT_APP_ICONO_URL","headerTitle","REACT_APP_TITULO","obtenerDatos","resTurnos","fetch","REACT_APP_API_TURNOS_OCUPADOS_HOY","ok","Error","turnosData","json","error","console","cambiarEstado","turnoId","nuevoEstadoId","res","REACT_APP_API_MODIFICAR_ESTADO_TURNO","method","headers","body","JSON","stringify","estado_id","prev","map","t","turno_id","estado","err","message","verHistoriaClinica","id_externo_paciente","hasOwnProperty","nuevo","REACT_APP_API_HISTORIAS","id_externo","data","historia","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","height","alignItems","padding","backgroundColor","color","gap","src","alt","width","objectFit","margin","fontSize","flexGrow","borderRight","onClick","cursor","border","borderRadius","textAlign","marginTop","className","length","turno","ahora","Date","inicio","fecha","fin","getTime","duracion","enCurso","paciente_nombre","hora","toLowerCase","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lucia/Desktop/PPIV_integrador_final/pp4/agendar-paciente-fe/agendar-app/src/PanelMedico.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./css/PanelMedico.css\";\r\n\r\nconst PanelMedico = ({ user, onLogout }) => {\r\n  const [turnos, setTurnos] = useState([]);\r\n  const [historiasClinicas, setHistoriasClinicas] = useState({});\r\n  const MEDICO_ID = user.id;\r\n  const MEDICO_NOMBRE = user.nombre;\r\n  const headerIconUrl = process.env.REACT_APP_ICONO_URL || \"\";\r\n  const headerTitle = process.env.REACT_APP_TITULO || \"Turnos Médicos\";\r\n\r\n  useEffect(() => {\r\n    const obtenerDatos = async () => {\r\n      try {\r\n        const resTurnos = await fetch(\r\n          `${process.env.REACT_APP_API_TURNOS_OCUPADOS_HOY}/${MEDICO_ID}`\r\n        );\r\n        if (!resTurnos.ok) throw new Error(\"Error al obtener turnos\");\r\n        const turnosData = await resTurnos.json();\r\n        setTurnos(turnosData);\r\n      } catch (error) {\r\n        console.error(\"Error al cargar datos:\", error);\r\n      }\r\n    };\r\n\r\n    obtenerDatos();\r\n  }, [MEDICO_ID]);\r\n\r\n  const cambiarEstado = async (turnoId, nuevoEstadoId) => {\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_MODIFICAR_ESTADO_TURNO}/${turnoId}/estado`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ estado_id: nuevoEstadoId }),\r\n        }\r\n      );\r\n\r\n      if (!res.ok) throw new Error(\"No se pudo actualizar el estado\");\r\n\r\n      setTurnos((prev) =>\r\n        prev.map((t) =>\r\n          t.turno_id === turnoId\r\n            ? {\r\n                ...t,\r\n                estado_id: nuevoEstadoId,\r\n                estado: nuevoEstadoId === \"A\" ? \"Atendido\" : \"Ausente\",\r\n              }\r\n            : t\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error al cambiar estado:\", err.message);\r\n    }\r\n  };\r\n  const verHistoriaClinica = async (id_externo_paciente, turnoId) => {\r\n    if (historiasClinicas.hasOwnProperty(turnoId)) {\r\n      setHistoriasClinicas((prev) => {\r\n        const nuevo = { ...prev };\r\n        delete nuevo[turnoId];\r\n        return nuevo;\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch(process.env.REACT_APP_API_HISTORIAS, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ id_externo: id_externo_paciente }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.error);\r\n\r\n      setHistoriasClinicas((prev) => ({\r\n        ...prev,\r\n        [turnoId]: data.historia,\r\n      }));\r\n    } catch (error) {\r\n      setHistoriasClinicas((prev) => ({\r\n        ...prev,\r\n        [turnoId]: null,\r\n      }));\r\n      console.error(\"Error al obtener historia clínica:\", error.message);\r\n    }\r\n  };\r\n\r\n  if (!turnos) {\r\n    return <div>Cargando turnos...</div>;\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {/* ----------------------------------------- Header --------------------------------------------*/}\r\n      <header\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"10px 20px\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"white\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        {headerIconUrl && (\r\n          <img\r\n            src={headerIconUrl}\r\n            alt=\"Icono\"\r\n            style={{ height: 40, width: 110, objectFit: \"contain\" }}\r\n          />\r\n        )}\r\n        <h1 style={{ margin: 0, fontSize: \"1.5rem\" }}>{headerTitle}</h1>\r\n      </header>\r\n\r\n      {/* -------------------------------------------------------------- Body ------------------------------------------------------ */}\r\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n        {/* ---------------------------------------- Menú lateral --------------------------------------------------------- */}\r\n        <nav\r\n          style={{\r\n            width: 200,\r\n            borderRight: \"1px solid #ddd\",\r\n            padding: \"20px\",\r\n            backgroundColor: \"#f8f9fa\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n          }}\r\n        >\r\n          <button\r\n            onClick={onLogout}\r\n            style={{\r\n              padding: \"10px\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"transparent\",\r\n              color: \"black\",\r\n              border: \"none\",\r\n              borderRadius: 4,\r\n              textAlign: \"left\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            Salir\r\n          </button>\r\n        </nav>\r\n\r\n        {/* -------------------------------------- Contenido principal ----------------------------------------- */}\r\n        <main style={{ flexGrow: 1, padding: 20 }}>\r\n          <div className=\"pantalla\">\r\n            <h2>Turnos del Día</h2>\r\n\r\n            <ul className=\"lista-turnos\">\r\n              {turnos.length === 0 ? (\r\n                <p>No hay turnos para hoy.</p>\r\n              ) : (\r\n                turnos.map((turno) => {\r\n                  const ahora = new Date();\r\n                  const inicio = new Date(turno.fecha);\r\n                  const fin = new Date(\r\n                    inicio.getTime() + turno.duracion * 60000\r\n                  );\r\n                  const enCurso = ahora >= inicio && ahora <= fin;\r\n\r\n                  return (\r\n                    <li\r\n                      key={turno.turno_id}\r\n                      className={`turno-item ${enCurso ? \"turno-actual\" : \"\"}`}\r\n                    >\r\n                      <div>\r\n                        <strong>{turno.paciente_nombre}</strong> — {turno.hora}{\" \"}\r\n                        — Estado:{\" \"}\r\n                        <span\r\n                          className={`estado ${turno.estado.toLowerCase()}`}\r\n                        >\r\n                          {turno.estado}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"botones-turno\">\r\n                        <button\r\n                          className=\"boton-atendido\"\r\n                          onClick={() => cambiarEstado(turno.turno_id, \"A\")}\r\n                          disabled={turno.estado_id !== \"R\"}\r\n                        >\r\n                          Atendido\r\n                        </button>\r\n                        <button\r\n                          className=\"boton-ausente\"\r\n                          onClick={() => cambiarEstado(turno.turno_id, \"U\")}\r\n                          disabled={turno.estado_id !== \"R\"}\r\n                        >\r\n                          Ausente\r\n                        </button>\r\n                        <button\r\n                          className=\"boton-historia\"\r\n                          onClick={() =>\r\n                            verHistoriaClinica(\r\n                              turno.id_externo_paciente,\r\n                              turno.turno_id\r\n                            )\r\n                          }\r\n                        >\r\n                          Historia Clínica\r\n                        </button>\r\n                      </div>\r\n\r\n                      {/* Mostrar historia clínica si ya fue consultada */}\r\n                      {historiasClinicas.hasOwnProperty(turno.turno_id) && (\r\n                        <div className=\"historia-clinica\">\r\n                          {historiasClinicas[turno.turno_id] ? (\r\n                            <>\r\n                              <strong>Historia Clínica:</strong>\r\n                              <p>{historiasClinicas[turno.turno_id]}</p>\r\n                            </>\r\n                          ) : (\r\n                            <p>El paciente no posee historia clínica.</p>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </li>\r\n                  );\r\n                })\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PanelMedico;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}